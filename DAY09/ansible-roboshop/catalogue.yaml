- name: Install catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: Setup NPM source
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: Install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out #saves the output of the id roboshop command in a variable called out
    ignore_errors: true #to ignore errors for this task. If the user roboshop does not exist, the command will fail, but the playbook will continue to the next task instead of stopping.

  - when: out.rc != 0 # It checks if the id roboshop command failed. The rc (return code) of the command will be 0 if successful (user exists), and non-zero if it failed (user doesn't exist).
    name: create user roboshop
    become: yes
    ansible.builtin.user:
      name: roboshop

#stat: stat module is used to get the status of a file or directory on the target machine. It collects information like the file's existence, permissions, size, etc.
  - name: Check app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - name: Print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stats.exists == "False"
    name: create the /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download catalogue artifact
    ansible.builtin.get_url:
      url: curl -o /tmp/catalogue.zip https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract catalogue artifact
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
  
  - name: Install dependencies
    ansible.builtin.command: npm Install
    args:
      chdir: /app

  - name: copy catalogue service
    ansible.builds.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: setup mongosh repo
    ansible.builtin.get_url: 
      url: wget https://downloads.mongodb.com/compass/mongosh-2.5.5-linux-x64.tgz
      dest: /tmp/mongosh-2.5.5-linux-x64.tgz
  
  - name: extract mongosh repo
    ansible.builtin.unarchive:
      src: /tmp/mongosh-2.5.5-linux-x64.tgz
      dest: /tmp/
      remote_src: yes

  - name: change directory
    ansible.builtin.command:
    args:
      cmd: ./bin/mongosh --version
      chdir: /tmp/mongosh-2.5.5-linux-x64/

  - name: Change directory to mongosh bin
    ansible.builtin.command:
      cmd: ./mongosh
      chdir: /tmp/mongosh-2.5.5-linux-x64/bin/

  - name: Execute MongoDB script on remote server
    ansible.builtin.command:
      cmd: ./mongosh --host "{{ mongodb_server_ip }}" < /app/schema/catalogue.js
      chdir: /tmp/mongosh-2.5.5-linux-x64/bin/

  - name: restart catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted